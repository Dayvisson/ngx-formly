webpackJsonp([1],{"2Zge":function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormGroup <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyFormOptions<span class="token punctuation" >,</span> FormlyFieldConfig <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-app-example\'</span><span class="token punctuation" >,</span>\n  templateUrl<span class="token punctuation" >:</span> <span class="token string" >\'./app.component.html\'</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppComponent</span> <span class="token punctuation" >{</span>\n  form <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >FormGroup</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  model <span class="token operator" >=</span> <span class="token punctuation" >{</span>\n    investments<span class="token punctuation" >:</span> <span class="token punctuation" >[</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n  options<span class="token punctuation" >:</span> FormlyFormOptions <span class="token operator" >=</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >;</span>\n\n  fields<span class="token punctuation" >:</span> FormlyFieldConfig<span class="token punctuation" >[</span><span class="token punctuation" >]</span> <span class="token operator" >=</span> <span class="token punctuation" >[</span>\n    <span class="token punctuation" >{</span>\n      key<span class="token punctuation" >:</span> <span class="token string" >\'investments\'</span><span class="token punctuation" >,</span>\n      type<span class="token punctuation" >:</span> <span class="token string" >\'repeat\'</span><span class="token punctuation" >,</span>\n      fieldArray<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n        fieldGroupClassName<span class="token punctuation" >:</span> <span class="token string" >\'row\'</span><span class="token punctuation" >,</span>\n        templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n          btnText<span class="token punctuation" >:</span> <span class="token string" >\'Add another investment\'</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        fieldGroup<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n          <span class="token punctuation" >{</span>\n            className<span class="token punctuation" >:</span> <span class="token string" >\'col-sm-4\'</span><span class="token punctuation" >,</span>\n            type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n            key<span class="token punctuation" >:</span> <span class="token string" >\'investmentName\'</span><span class="token punctuation" >,</span>\n            templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n              label<span class="token punctuation" >:</span> <span class="token string" >\'Name of Investment:\'</span><span class="token punctuation" >,</span>\n              required<span class="token punctuation" >:</span> <span class="token keyword" >true</span><span class="token punctuation" >,</span>\n            <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >{</span>\n            type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n            key<span class="token punctuation" >:</span> <span class="token string" >\'investmentDate\'</span><span class="token punctuation" >,</span>\n            className<span class="token punctuation" >:</span> <span class="token string" >\'col-sm-4\'</span><span class="token punctuation" >,</span>\n            templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n              type<span class="token punctuation" >:</span> <span class="token string" >\'date\'</span><span class="token punctuation" >,</span>\n              label<span class="token punctuation" >:</span> <span class="token string" >\'Date of Investment:\'</span><span class="token punctuation" >,</span>\n            <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >{</span>\n            type<span class="token punctuation" >:</span> <span class="token string" >\'input\'</span><span class="token punctuation" >,</span>\n            key<span class="token punctuation" >:</span> <span class="token string" >\'stockIdentifier\'</span><span class="token punctuation" >,</span>\n            className<span class="token punctuation" >:</span> <span class="token string" >\'col-sm-4\'</span><span class="token punctuation" >,</span>\n            templateOptions<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n              label<span class="token punctuation" >:</span> <span class="token string" >\'Stock Identifier:\'</span><span class="token punctuation" >,</span>\n              addonRight<span class="token punctuation" >:</span> <span class="token punctuation" >{</span>\n                <span class="token keyword" >class</span><span class="token punctuation" >:</span> <span class="token string" >\'fa fa-code\'</span><span class="token punctuation" >,</span>\n                onClick<span class="token punctuation" >:</span> <span class="token punctuation" >(</span>to<span class="token punctuation" >,</span> fieldType<span class="token punctuation" >,</span> $event<span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> console<span class="token punctuation" >.</span><span class="token function" >log</span><span class="token punctuation" >(</span>to<span class="token punctuation" >,</span> fieldType<span class="token punctuation" >,</span> $event<span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n              <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n            <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n          <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n        <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n  <span class="token function" >submit</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token function" >alert</span><span class="token punctuation" >(</span>JSON<span class="token punctuation" >.</span><span class="token function" >stringify</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'},"3OqU":function(n,s,a){(function(n,a){function t(n,s){return n.set(s[0],s[1]),n}function p(n,s){return n.add(s),n}function o(n,s){for(var a=-1,t=n?n.length:0;++a<t&&!1!==s(n[a],a,n););return n}function e(n,s){for(var a=-1,t=s.length,p=n.length;++a<t;)n[p+a]=s[a];return n}function c(n,s,a,t){var p=-1,o=n?n.length:0;for(t&&o&&(a=n[++p]);++p<o;)a=s(a,n[p],p,n);return a}function u(n,s){for(var a=-1,t=Array(n);++a<n;)t[a]=s(a);return t}function l(n,s){return null==n?void 0:n[s]}function i(n){var s=!1;if(null!=n&&"function"!=typeof n.toString)try{s=!!(n+"")}catch(n){}return s}function r(n){var s=-1,a=Array(n.size);return n.forEach(function(n,t){a[++s]=[t,n]}),a}function k(n,s){return function(a){return n(s(a))}}function f(n){var s=-1,a=Array(n.size);return n.forEach(function(n){a[++s]=n}),a}function d(n){var s=-1,a=n?n.length:0;for(this.clear();++s<a;){var t=n[s];this.set(t[0],t[1])}}function m(n){var s=-1,a=n?n.length:0;for(this.clear();++s<a;){var t=n[s];this.set(t[0],t[1])}}function y(n){var s=-1,a=n?n.length:0;for(this.clear();++s<a;){var t=n[s];this.set(t[0],t[1])}}function b(n){this.__data__=new m(n)}function g(n,s){var a=ws(n)||X(n)?u(n.length,String):[],t=a.length,p=!!t;for(var o in n)!s&&!Ln.call(n,o)||p&&("length"==o||V(o,t))||a.push(o);return a}function h(n,s,a){var t=n[s];Ln.call(n,s)&&Q(t,a)&&(void 0!==a||s in n)||(n[s]=a)}function v(n,s){for(var a=n.length;a--;)if(Q(n[a][0],s))return a;return-1}function w(n,s){return n&&T(s,tn(s),n)}function _(n,s,a,t,p,e,c){var u;if(t&&(u=e?t(n,p,e,c):t(n)),void 0!==u)return u;if(!sn(n))return n;var l=ws(n);if(l){if(u=D(n),!s)return G(n,u)}else{var r=vs(n),k=r==rn||r==kn;if(_s(n))return x(n,s);if(r==mn||r==cn||k&&!e){if(i(n))return e?n:{};if(u=E(k?{}:n),!s)return B(n,w(u,n))}else{if(!Rn[r])return e?n:{};u=J(n,r,_,s)}}c||(c=new b);var f=c.get(n);if(f)return f;if(c.set(n,u),!l)var d=a?U(n):tn(n);return o(d||n,function(p,o){d&&(p=n[o=p]),h(u,o,_(p,s,a,t,o,n,c))}),u}function j(n){return sn(n)?ns(n):{}}function O(n,s,a){var t=s(n);return ws(n)?t:e(t,a(n))}function A(n){return!(!sn(n)||Z(n))&&(K(n)||i(n)?Qn:Sn).test(z(n))}function F(n){if(!L(n))return os(n);var s=[];for(var a in Object(n))Ln.call(n,a)&&"constructor"!=a&&s.push(a);return s}function x(n,s){if(s)return n.slice();var a=new n.constructor(n.length);return n.copy(a),a}function C(n){var s=new n.constructor(n.byteLength);return new Hn(s).set(new Hn(n)),s}function M(n,s){var a=s?C(n.buffer):n.buffer;return new n.constructor(a,n.byteOffset,n.byteLength)}function I(n,s,a){return c(s?a(r(n),!0):r(n),t,new n.constructor)}function N(n){var s=new n.constructor(n.source,Nn.exec(n));return s.lastIndex=n.lastIndex,s}function S(n,s,a){return c(s?a(f(n),!0):f(n),p,new n.constructor)}function P(n){return gs?Object(gs.call(n)):{}}function R(n,s){var a=s?C(n.buffer):n.buffer;return new n.constructor(a,n.byteOffset,n.length)}function G(n,s){var a=-1,t=n.length;for(s||(s=Array(t));++a<t;)s[a]=n[a];return s}function T(n,s,a,t){a||(a={});for(var p=-1,o=s.length;++p<o;){var e=s[p],c=t?t(a[e],n[e],e,a,n):void 0;h(a,e,void 0===c?n[e]:c)}return a}function B(n,s){return T(n,hs(n),s)}function U(n){return O(n,tn,hs)}function $(n,s){var a=n.__data__;return W(s)?a["string"==typeof s?"string":"hash"]:a.map}function q(n,s){var a=l(n,s);return A(a)?a:void 0}function D(n){var s=n.length,a=n.constructor(s);return s&&"string"==typeof n[0]&&Ln.call(n,"index")&&(a.index=n.index,a.input=n.input),a}function E(n){return"function"!=typeof n.constructor||L(n)?{}:j(Kn(n))}function J(n,s,a,t){var p=n.constructor;switch(s){case vn:return C(n);case un:case ln:return new p(+n);case wn:return M(n,t);case _n:case jn:case On:case An:case Fn:case xn:case Cn:case Mn:case In:return R(n,t);case fn:return I(n,t,a);case dn:case gn:return new p(n);case yn:return N(n);case bn:return S(n,t,a);case hn:return P(n)}}function V(n,s){return!!(s=null==s?en:s)&&("number"==typeof n||Pn.test(n))&&n>-1&&n%1==0&&n<s}function W(n){var s=typeof n;return"string"==s||"number"==s||"symbol"==s||"boolean"==s?"__proto__"!==n:null===n}function Z(n){return!!Wn&&Wn in n}function L(n){var s=n&&n.constructor;return n===("function"==typeof s&&s.prototype||Jn)}function z(n){if(null!=n){try{return Zn.call(n)}catch(n){}try{return n+""}catch(n){}}return""}function Q(n,s){return n===s||n!=n&&s!=s}function X(n){return H(n)&&Ln.call(n,"callee")&&(!ss.call(n,"callee")||zn.call(n)==cn)}function Y(n){return null!=n&&nn(n.length)&&!K(n)}function H(n){return an(n)&&Y(n)}function K(n){var s=sn(n)?zn.call(n):"";return s==rn||s==kn}function nn(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=en}function sn(n){var s=typeof n;return!!n&&("object"==s||"function"==s)}function an(n){return!!n&&"object"==typeof n}function tn(n){return Y(n)?g(n):F(n)}var pn=200,on="__lodash_hash_undefined__",en=9007199254740991,cn="[object Arguments]",un="[object Boolean]",ln="[object Date]",rn="[object Function]",kn="[object GeneratorFunction]",fn="[object Map]",dn="[object Number]",mn="[object Object]",yn="[object RegExp]",bn="[object Set]",gn="[object String]",hn="[object Symbol]",vn="[object ArrayBuffer]",wn="[object DataView]",_n="[object Float32Array]",jn="[object Float64Array]",On="[object Int8Array]",An="[object Int16Array]",Fn="[object Int32Array]",xn="[object Uint8Array]",Cn="[object Uint8ClampedArray]",Mn="[object Uint16Array]",In="[object Uint32Array]",Nn=/\w*$/,Sn=/^\[object .+?Constructor\]$/,Pn=/^(?:0|[1-9]\d*)$/,Rn={};Rn[cn]=Rn["[object Array]"]=Rn[vn]=Rn[wn]=Rn[un]=Rn[ln]=Rn[_n]=Rn[jn]=Rn[On]=Rn[An]=Rn[Fn]=Rn[fn]=Rn[dn]=Rn[mn]=Rn[yn]=Rn[bn]=Rn[gn]=Rn[hn]=Rn[xn]=Rn[Cn]=Rn[Mn]=Rn[In]=!0,Rn["[object Error]"]=Rn[rn]=Rn["[object WeakMap]"]=!1;var Gn="object"==typeof n&&n&&n.Object===Object&&n,Tn="object"==typeof self&&self&&self.Object===Object&&self,Bn=Gn||Tn||Function("return this")(),Un="object"==typeof s&&s&&!s.nodeType&&s,$n=Un&&"object"==typeof a&&a&&!a.nodeType&&a,qn=$n&&$n.exports===Un,Dn=Array.prototype,En=Function.prototype,Jn=Object.prototype,Vn=Bn["__core-js_shared__"],Wn=function(){var n=/[^.]+$/.exec(Vn&&Vn.keys&&Vn.keys.IE_PROTO||"");return n?"Symbol(src)_1."+n:""}(),Zn=En.toString,Ln=Jn.hasOwnProperty,zn=Jn.toString,Qn=RegExp("^"+Zn.call(Ln).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Xn=qn?Bn.Buffer:void 0,Yn=Bn.Symbol,Hn=Bn.Uint8Array,Kn=k(Object.getPrototypeOf,Object),ns=Object.create,ss=Jn.propertyIsEnumerable,as=Dn.splice,ts=Object.getOwnPropertySymbols,ps=Xn?Xn.isBuffer:void 0,os=k(Object.keys,Object),es=q(Bn,"DataView"),cs=q(Bn,"Map"),us=q(Bn,"Promise"),ls=q(Bn,"Set"),is=q(Bn,"WeakMap"),rs=q(Object,"create"),ks=z(es),fs=z(cs),ds=z(us),ms=z(ls),ys=z(is),bs=Yn?Yn.prototype:void 0,gs=bs?bs.valueOf:void 0;d.prototype.clear=function(){this.__data__=rs?rs(null):{}},d.prototype.delete=function(n){return this.has(n)&&delete this.__data__[n]},d.prototype.get=function(n){var s=this.__data__;if(rs){var a=s[n];return a===on?void 0:a}return Ln.call(s,n)?s[n]:void 0},d.prototype.has=function(n){var s=this.__data__;return rs?void 0!==s[n]:Ln.call(s,n)},d.prototype.set=function(n,s){return this.__data__[n]=rs&&void 0===s?on:s,this},m.prototype.clear=function(){this.__data__=[]},m.prototype.delete=function(n){var s=this.__data__,a=v(s,n);return!(a<0||(a==s.length-1?s.pop():as.call(s,a,1),0))},m.prototype.get=function(n){var s=this.__data__,a=v(s,n);return a<0?void 0:s[a][1]},m.prototype.has=function(n){return v(this.__data__,n)>-1},m.prototype.set=function(n,s){var a=this.__data__,t=v(a,n);return t<0?a.push([n,s]):a[t][1]=s,this},y.prototype.clear=function(){this.__data__={hash:new d,map:new(cs||m),string:new d}},y.prototype.delete=function(n){return $(this,n).delete(n)},y.prototype.get=function(n){return $(this,n).get(n)},y.prototype.has=function(n){return $(this,n).has(n)},y.prototype.set=function(n,s){return $(this,n).set(n,s),this},b.prototype.clear=function(){this.__data__=new m},b.prototype.delete=function(n){return this.__data__.delete(n)},b.prototype.get=function(n){return this.__data__.get(n)},b.prototype.has=function(n){return this.__data__.has(n)},b.prototype.set=function(n,s){var a=this.__data__;if(a instanceof m){var t=a.__data__;if(!cs||t.length<pn-1)return t.push([n,s]),this;a=this.__data__=new y(t)}return a.set(n,s),this};var hs=ts?k(ts,Object):function(){return[]},vs=function(n){return zn.call(n)};(es&&vs(new es(new ArrayBuffer(1)))!=wn||cs&&vs(new cs)!=fn||us&&"[object Promise]"!=vs(us.resolve())||ls&&vs(new ls)!=bn||is&&"[object WeakMap]"!=vs(new is))&&(vs=function(n){var s=zn.call(n),a=s==mn?n.constructor:void 0,t=a?z(a):void 0;if(t)switch(t){case ks:return wn;case fs:return fn;case ds:return"[object Promise]";case ms:return bn;case ys:return"[object WeakMap]"}return s});var ws=Array.isArray,_s=ps||function(){return!1};a.exports=function(n){return _(n,!0,!0)}}).call(s,a("fRUx"),a("ZwkM")(n))},"8Quw":function(n,s){n.exports='<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>form</span> <span class="token attr-name" >[formGroup]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span> <span class="token attr-name" >(ngSubmit)</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit()<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>formly-form</span> <span class="token attr-name" >[model]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>model<span class="token punctuation" >"</span></span> <span class="token attr-name" >[fields]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>fields<span class="token punctuation" >"</span></span> <span class="token attr-name" >[options]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>options<span class="token punctuation" >"</span></span> <span class="token attr-name" >[form]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>form<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>button</span> <span class="token attr-name" >type</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>submit<span class="token punctuation" >"</span></span> <span class="token attr-name" >class</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>btn btn-primary submit-button<span class="token punctuation" >"</span></span> <span class="token attr-name" >[disabled]</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>!form.valid<span class="token punctuation" >"</span></span><span class="token punctuation" >></span></span>Submit<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>button</span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>formly-form</span><span class="token punctuation" >></span></span>\n<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>form</span><span class="token punctuation" >></span></span>\n'},GUYg:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var t=a("6Xbx"),p=a("/oeL"),o=a("BkNc"),e=a("Xa16"),c=a("qbdv"),u=a("bm2B"),l=a("JPbF"),i=a("sAA7"),r=function(){function n(){this.form=new u.d({}),this.model={investments:[{}]},this.options={},this.fields=[{key:"investments",type:"repeat",fieldArray:{fieldGroupClassName:"row",templateOptions:{btnText:"Add another investment"},fieldGroup:[{className:"col-sm-4",type:"input",key:"investmentName",templateOptions:{label:"Name of Investment:",required:!0}},{type:"input",key:"investmentDate",className:"col-sm-4",templateOptions:{type:"date",label:"Date of Investment:"}},{type:"input",key:"stockIdentifier",className:"col-sm-4",templateOptions:{label:"Stock Identifier:",addonRight:{class:"fa fa-code",onClick:function(n,s,a){return console.log(n,s,a)}}}}]}}]}return n.prototype.submit=function(){alert(JSON.stringify(this.model))},n=t.b([Object(p.o)({selector:"formly-app-example",template:a("IPuB")})],n)}(),k=a("3OqU"),f=function(n){function s(s){var a=n.call(this)||this;return a.builder=s,a.fields=[],a}return t.c(s,n),Object.defineProperty(s.prototype,"newFields",{get:function(){return k(this.field.fieldArray.fieldGroup)},enumerable:!0,configurable:!0}),s.prototype.ngOnInit=function(){var n=this;this.model&&setTimeout(function(){return n.model.map(function(){return n.add()})})},s.prototype.add=function(){var n=new u.d({}),s=this.fields.length;this.model[s]||this.model.push({}),this.fields.push(this.newFields),this.builder.buildForm(n,this.fields[s],this.model[s],this.options),this.formControl.push(n)},s.prototype.remove=function(n){this.formControl.removeAt(n),this.model.splice(n,1),this.fields.splice(n,1)},s=t.b([Object(p.o)({selector:"formly-repeat-section",template:'\n    <div *ngFor="let control of formControl.controls; let i = index;">\n      <formly-form\n        [model]="model[i]"\n        [fields]="fields[i]"\n        [options]="options"\n        [form]="this.formControl.at(i)"\n        [ngClass]="field.fieldArray.fieldGroupClassName">\n      </formly-form>\n      <div class="col-md-2">\n        <button class="btn btn-danger" type="button" (click)="remove(i)">Remove</button>\n      </div>\n    </div>\n    <div style="margin:30px 0;">\n      <button class="btn btn-primary" type="button" (click)="add()">Add More Investments</button>\n    </div>\n  '}),t.d("design:paramtypes",["function"==typeof(a=void 0!==l.c&&l.c)&&a||Object])],s);var a}(l.a),d=function(){function n(){}return n=t.b([Object(p.M)({imports:[c.b,u.h,i.a,l.d.forRoot({types:[{name:"repeat",component:f}]})],declarations:[r,f]})],n)}();a.d(s,"ConfigModule",function(){return m});var m=function(){function n(){}return n=t.b([Object(p.M)({imports:[e.b,d,o.g.forChild([{path:"",component:e.a,data:{examples:[{title:"Repeating Section",description:"\n              This demonstrates using\n              <code>formly-form</code> inside of a custom type in order to accomplish repeating fields.\n            ",component:r,files:[{file:"app.component.html",content:a("8Quw")},{file:"app.component.ts",content:a("2Zge")},{file:"app.module.ts",content:a("lVsc")},{file:"repeat-section.type.ts",content:a("qkbu")}]}]}}])]})],n)}()},IPuB:function(n,s){n.exports='<form [formGroup]="form" (ngSubmit)="submit()">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form">\n    <button type="submit" class="btn btn-primary submit-button" [disabled]="!form.valid">Submit</button>\n  </formly-form>\n</form>\n'},ZwkM:function(n,s){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},lVsc:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> NgModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> CommonModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/common\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> ReactiveFormsModule <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormlyBootstrapModule <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/bootstrap\'</span><span class="token punctuation" >;</span>\n\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> AppComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./app.component\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> RepeatTypeComponent <span class="token punctuation" >}</span> from <span class="token string" >\'./repeat-section.type\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >NgModule</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  imports<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    CommonModule<span class="token punctuation" >,</span>\n    ReactiveFormsModule<span class="token punctuation" >,</span>\n    FormlyBootstrapModule<span class="token punctuation" >,</span>\n    FormlyModule<span class="token punctuation" >.</span><span class="token function" >forRoot</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n      types<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n        <span class="token punctuation" >{</span> name<span class="token punctuation" >:</span> <span class="token string" >\'repeat\'</span><span class="token punctuation" >,</span> component<span class="token punctuation" >:</span> RepeatTypeComponent <span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n      <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n    <span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n  declarations<span class="token punctuation" >:</span> <span class="token punctuation" >[</span>\n    AppComponent<span class="token punctuation" >,</span>\n    RepeatTypeComponent<span class="token punctuation" >,</span>\n  <span class="token punctuation" >]</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >AppModule</span> <span class="token punctuation" >{</span> <span class="token punctuation" >}</span>\n'},qkbu:function(n,s){n.exports='<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Component<span class="token punctuation" >,</span> OnInit <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FormArray<span class="token punctuation" >,</span> FormGroup <span class="token punctuation" >}</span> from <span class="token string" >\'@angular/forms\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> FieldType<span class="token punctuation" >,</span> FormlyFormBuilder <span class="token punctuation" >}</span> from <span class="token string" >\'@ngx-formly/core\'</span><span class="token punctuation" >;</span>\n<span class="token keyword" >import</span> <span class="token operator" >*</span> as clonedeep from <span class="token string" >\'lodash.clonedeep\'</span><span class="token punctuation" >;</span>\n\n@<span class="token function" >Component</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  selector<span class="token punctuation" >:</span> <span class="token string" >\'formly-repeat-section\'</span><span class="token punctuation" >,</span>\n  template<span class="token punctuation" >:</span> `\n    <span class="token operator" >&lt;</span>div <span class="token operator" >*</span>ngFor<span class="token operator" >=</span><span class="token string" >"let control of formControl.controls; let i = index;"</span><span class="token operator" >></span>\n      <span class="token operator" >&lt;</span>formly<span class="token operator" >-</span>form\n        <span class="token punctuation" >[</span>model<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"model[i]"</span>\n        <span class="token punctuation" >[</span>fields<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"fields[i]"</span>\n        <span class="token punctuation" >[</span>options<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"options"</span>\n        <span class="token punctuation" >[</span>form<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"this.formControl.at(i)"</span>\n        <span class="token punctuation" >[</span>ngClass<span class="token punctuation" >]</span><span class="token operator" >=</span><span class="token string" >"field.fieldArray.fieldGroupClassName"</span><span class="token operator" >></span>\n      <span class="token operator" >&lt;</span><span class="token operator" >/</span>formly<span class="token operator" >-</span>form<span class="token operator" >></span>\n      <span class="token operator" >&lt;</span>div <span class="token keyword" >class</span><span class="token operator" >=</span><span class="token string" >"col-md-2"</span><span class="token operator" >></span>\n        <span class="token operator" >&lt;</span>button <span class="token keyword" >class</span><span class="token operator" >=</span><span class="token string" >"btn btn-danger"</span> type<span class="token operator" >=</span><span class="token string" >"button"</span> <span class="token punctuation" >(</span>click<span class="token punctuation" >)</span><span class="token operator" >=</span><span class="token string" >"remove(i)"</span><span class="token operator" >></span>Remove<span class="token operator" >&lt;</span><span class="token operator" >/</span>button<span class="token operator" >></span>\n      <span class="token operator" >&lt;</span><span class="token operator" >/</span>div<span class="token operator" >></span>\n    <span class="token operator" >&lt;</span><span class="token operator" >/</span>div<span class="token operator" >></span>\n    <span class="token operator" >&lt;</span>div style<span class="token operator" >=</span><span class="token string" >"margin:30px 0;"</span><span class="token operator" >></span>\n      <span class="token operator" >&lt;</span>button <span class="token keyword" >class</span><span class="token operator" >=</span><span class="token string" >"btn btn-primary"</span> type<span class="token operator" >=</span><span class="token string" >"button"</span> <span class="token punctuation" >(</span>click<span class="token punctuation" >)</span><span class="token operator" >=</span><span class="token string" >"add()"</span><span class="token operator" >></span>Add More Investments<span class="token operator" >&lt;</span><span class="token operator" >/</span>button<span class="token operator" >></span>\n    <span class="token operator" >&lt;</span><span class="token operator" >/</span>div<span class="token operator" >></span>\n  `<span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n<span class="token keyword" >export</span> <span class="token keyword" >class</span> <span class="token class-name" >RepeatTypeComponent</span> <span class="token keyword" >extends</span> <span class="token class-name" >FieldType</span> <span class="token keyword" >implements</span> <span class="token class-name" >OnInit</span> <span class="token punctuation" >{</span>\n  formControl<span class="token punctuation" >:</span> FormArray<span class="token punctuation" >;</span>\n  fields <span class="token operator" >=</span> <span class="token punctuation" >[</span><span class="token punctuation" >]</span><span class="token punctuation" >;</span>\n\n  <span class="token keyword" >constructor</span><span class="token punctuation" >(</span><span class="token keyword" >private</span> builder<span class="token punctuation" >:</span> FormlyFormBuilder<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >super</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token keyword" >get</span> <span class="token function" >newFields</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token function" >clonedeep</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>field<span class="token punctuation" >.</span>fieldArray<span class="token punctuation" >.</span>fieldGroup<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >ngOnInit</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token function" >setTimeout</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >.</span><span class="token function" >map</span><span class="token punctuation" >(</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token operator" >=</span><span class="token operator" >></span> <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >add</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >add</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >const</span> form <span class="token operator" >=</span> <span class="token keyword" >new</span> <span class="token class-name" >FormGroup</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >,</span>\n      i <span class="token operator" >=</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>fields<span class="token punctuation" >.</span>length<span class="token punctuation" >;</span>\n\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token operator" >!</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >[</span>i<span class="token punctuation" >]</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >.</span><span class="token function" >push</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token punctuation" >}</span>\n\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span>fields<span class="token punctuation" >.</span><span class="token function" >push</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>newFields<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span>builder<span class="token punctuation" >.</span><span class="token function" >buildForm</span><span class="token punctuation" >(</span>form<span class="token punctuation" >,</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>fields<span class="token punctuation" >[</span>i<span class="token punctuation" >]</span><span class="token punctuation" >,</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >[</span>i<span class="token punctuation" >]</span><span class="token punctuation" >,</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>options<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span>formControl<span class="token punctuation" >.</span><span class="token function" >push</span><span class="token punctuation" >(</span>form<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >remove</span><span class="token punctuation" >(</span>i<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span>formControl<span class="token punctuation" >.</span><span class="token function" >removeAt</span><span class="token punctuation" >(</span>i<span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span>model<span class="token punctuation" >.</span><span class="token function" >splice</span><span class="token punctuation" >(</span>i<span class="token punctuation" >,</span> <span class="token number" >1</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span>fields<span class="token punctuation" >.</span><span class="token function" >splice</span><span class="token punctuation" >(</span>i<span class="token punctuation" >,</span> <span class="token number" >1</span><span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n  <span class="token punctuation" >}</span>\n<span class="token punctuation" >}</span>\n'}});